{"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code]\n---\ntitle: \"Olist a Brazilian e-commerce\"\nauthor: \"Anshuman Moudgil\"\ndate: \"24 April 2019\"\noutput:\n  html_document:\n    number_sections: true\n    toc: true\n    fig_width: 7\n    fig_height: 4.5\n    theme: readable\n    highlight: tango\n    code_folding: hide\n---\n\n<hr>\n\n**SUBJECT: eCommerce & Supply Chain**\n\n- $1^{st} \\text{ case is about a}$ [**Spanish** eCommerce Ulabox](https://www.kaggle.com/anshumoudgil/ulabox-ecommerce-hypothesis-strategy-clustering)\n- $2^{nd} \\text{ case is about a}$ [**Brazilian** eCommerce Olist](https://www.kaggle.com/anshumoudgil/olist-ecommerce-analytics-clusters-poly-equation)\n\n<hr>\n\nVersions: 24 Apr 2019, 29 Apr 2019, 03 May 2019, 15 May 2019, 06 Feb 2020.\n\n<hr>\n\nDear Reader,\n\n# Olist's Business Model\n\n**[Olist](http://www.olist.com/)** is a **Brazilian** departmental store (*marketplace*) that **operates in e-commerce segment, but is not an e-commerce itself** (*as she says*). It operates as a SaaS (*Software as a Service*) technology company since 2015. It offers a marketplace solution (*of e-commerce segment*) to shopkeepers of all sizes (*and for most segments*) to increase their sales whether they have online presence or not. \n\n## Olist's Solution\n\nOlist's solution consists of three aspects: Software, Contracts with the main marketplaces and Reputation sharing. The diagram below shows how Olist links marketplaces, consumers (*Portuguese: consumidores*), and retailers (*Portuguese: varejistas*)\n\n![Olist’s marketplace model](https://olist.com/wp-content/uploads/2018/04/Group-40.svg)\n\n## What Olist says?\n\nOlist says she... \n\n1. ... is a large department store within marketplaces.\n2. ... is connected to the main e-commerces of Brazil.\n3. ... does not buy products. \n4. ... does not keep products in stock.\n5. ... does not carry out shipping of any products offered in its store. \n6. All products are sold and shipped by the thousands of shopkeepers (**registered on Olist***) who sell through Olist.\n7. Her strength lies in union of all participating shopkeepers, who are selling physical products. \n8. Participant shopkeeper is responsible for separating, packing, and taking products to the logistics operator.\n\n**Please note Olist's perspective (a supply chain preview):** she prescribes there are many factors that can influence the sales of a shopkeeper e.g. type of product, demand, seasonality, competitive pricing, terms, inventory etc\n\nIn image below Olist describes (*in Portuguese*) how it differentiates itself from the other marketplaces based on reputation, product placements, dedicated teams to sales & customer service, reduced time to start selling, centralised control of operations and other competitive tools.\n\n![Olist’s niche — way to differentiate](https://olist.com/wp-content/uploads/2019/02/ilustracao-home.gif)\n\n# Data Model\n\nOn Kaggle, she shared its data of 100k orders from 2016 to 2018. There are 8+1 datasets to play with and explore. The data model has been described in image below and it is organised and normalised for each category.\n\n![Data Model](https://i.imgur.com/HRhd2Y0.png) \n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(gridExtra)\nlibrary(lattice)\nlibrary(caret)\nlibrary(kableExtra)\n\nCustomers <- read.csv(\"../input/olist_customers_dataset.csv\", header = TRUE)\nGeolocation <- read.csv(\"../input/olist_geolocation_dataset.csv\", header = TRUE)\nItems <- read.csv(\"../input/olist_order_items_dataset.csv\", header = TRUE)\nPayments <- read.csv(\"../input/olist_order_payments_dataset.csv\", header = TRUE)\nReviews <- read.csv(\"../input/olist_order_reviews_dataset.csv\", header = TRUE)\nOrders <- read.csv(\"../input/olist_orders_dataset.csv\", header = TRUE)\nProducts <- read.csv(\"../input/olist_products_dataset.csv\", header = TRUE)\nSellers <- read.csv(\"../input/olist_sellers_dataset.csv\", header = TRUE)\nPdttrans <- read.csv(\"../input/product_category_name_translation.csv\", header = TRUE)\n\n```\n\n## Principal Dataset\n\nOrders dataset\n\n- Order ID\n- Customer ID\n- Order Status \n- Order Purchase Timestamp\n- Order Approved at\n- Order Delivered Carrier date\n- Order Delivered Customer date\n- Order Estimated delivered date\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Orders), format = \"markdown\",caption = \"Orders dataset\")\n```\n\n## Other Datasets {.tabset .tabset-fade .tabset-pills}\n\n### Customers dataset\n\n- Customer ID\n- Customer Unique ID\n- Customer Zip Code prefix\n- Customer City\n- Customer State\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Customers), format = \"markdown\", caption = \"Customers dataset\")\n```\n\n### Geolocation dataset\n\n- Geolocation Zip Code prefix\n- Geolocation Lat.\n- Geolocation Lng.\n- Geolocation City\n- Geolocation State\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Geolocation), format = \"markdown\", caption = \"Geolocation dataset\")\n```\n\n### Items dataset\n\n- Order ID\n- Order Item ID\n- Seller ID\n- Shipping limit date\n- Price\n- Freight Value\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Items), format = \"markdown\", caption = \"Items dataset\")\n```\n\n### Payments dataset\n\n- Order ID\n- Payment Sequential \n- Payment Type\n- Payment Installments\n- Payment Value\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Payments), format = \"markdown\", caption = \"Payments dataset\")\n```\n\n### Products dataset\n\n- Product ID\n- Product Category name\n- Product Name length\n- Product Photos (quantity)\n- Product Weight (grams)\n- Product Length (cm)\n- Product Height (cm)\n- Product Width (cm)\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Products), format = \"markdown\", caption = \"Products dataset\")\n```\n\n### Reviews dataset\n\n- Review ID\n- Order ID\n- Review Score\n- Review Comment title\n- Review Comment message\n- Review Creation date\n- Review Answer timestamp\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Reviews), format = \"markdown\", caption = \"Reviews dataset\")\n```\n\n### Sellers dataset\n\n- Seller ID\n- Seller Zip Code prefix\n- Selller City\n- Seller State\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Sellers), format = \"markdown\", caption = \"Sellers dataset\")\n```\n\n### Product Category translation dataset\n\n- Product Category name (Portuguese)\n- Product Category name (English)\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\nkable(head(Pdttrans), format = \"markdown\", caption = \"Translation dataset\")\n```\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nOrders <- mutate(Orders, Est.Lead.t = interval(ymd_hms(Orders$order_purchase_timestamp), ymd_hms(Orders$order_estimated_delivery_date)) %/% days(x = 1))\nOrders <- mutate(Orders, Act.Lead.t = interval(ymd_hms(Orders$order_purchase_timestamp), ymd_hms(Orders$order_delivered_customer_date)) %/% days(x = 1))\nOrders <- mutate(Orders, Approval.mins = interval(ymd_hms(Orders$order_purchase_timestamp), ymd_hms(Orders$order_approved_at)) %/% minutes(x = 1))\nOrders <- mutate(Orders, Appr.to.Car = interval(ymd_hms(Orders$order_purchase_timestamp), ymd_hms(Orders$order_delivered_carrier_date)) %/% days(x = 1))\nOrders <- mutate(Orders, Car.to.Cus = interval(ymd_hms(Orders$order_delivered_carrier_date), ymd_hms(Orders$order_delivered_customer_date)) %/% days(x = 1))\nOrders <- mutate(Orders, purchase_quart = quarter(Orders$order_purchase_timestamp, with_year = TRUE))\nOrders <- mutate(Orders, purchase_month = month(Orders$order_purchase_timestamp, label = TRUE, abbr = FALSE))\nOrders <- mutate(Orders, purchase_year = year(Orders$order_purchase_timestamp))\n\nItems <- mutate(Items, order.price = (order_item_id*price))\nItems <- mutate(Items, order.freight = (order_item_id*freight_value))\nItems <- mutate(Items, total.order.cost = (order.price + order.freight))\nItems <- mutate(Items, fr.sup.pr = if_else(freight_value >= price, 1, 0))\n```\n# Stimulation as *ƒ(Customers, Product Categories, Sellers)*\n\nOlist has been stimultaed by addition of Customers, Product Catgories, and Sellers. As per the data, there has been a steady stream of customers and sellers getting registered on Olist's platform. This progress, in conjunction with regular increase in number of new product categories being offered has maintained Olist's growth momentum.\n\n## Trend of New Customers' registration\n\nThe graph shows, in 2017, there has been a positive trend line in number of New Customers [**Customer Unique Identity**] getting registered with Olist. In 2018, more than 6000 were getting registered every month.\n\n```{r, warning=FALSE, fig.align='center', message=FALSE, echo=FALSE}\n\nCust.gr <- inner_join(Orders, Customers, by = \"customer_id\")\n\nCust.gr %>% select_at(vars(purchase_year, purchase_month, customer_unique_id)) %>% distinct_at(vars(purchase_year, purchase_month, customer_unique_id)) %>% arrange_at(vars(purchase_year, purchase_month)) %>% count_(vars(purchase_year, purchase_month)) %>% ggplot(aes(y = n, x = as.factor(purchase_month), label = n, color = factor(purchase_year)))+\n  geom_point(size = 5, color = 'navy', shape = 21, alpha = 0.54)+\n  geom_point(size = 3.75, color = 'navy', shape = 21, alpha = 0.72)+\n  geom_label(aes(fill = factor(purchase_year)), colour = \"white\", fontface = \"bold\", vjust = 1, size = 4.25)+\n  facet_grid(.~purchase_year)+\n              theme_minimal()+\n  theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1,0.7))+\n  labs(title = \"Trend of new customer registration per month\", x = \"Months\", y = \"Number of Customers\", fill = \"Purchase Year\")\n\n```\n\n## Galvanisation by Product Categories\n\nIn my opinion, addition of +50 (*approximate*) New Product Categories per month - *as an offer* - has galvanised the spurt in new customers getting registered. Consistency in this phenomenon was Olist's byword for 20 months i.e. from January 2017 to August 2018.\n\n```{r, warning=FALSE, message=FALSE, fig.align='center', echo=FALSE}\nProducts <- left_join(Products, Pdttrans, by = \"product_category_name\")\nItems <- left_join(Items, Products, by = \"product_id\")\nPdt.Gr <- inner_join(Orders, Items, by = \"order_id\")\n\nPdt.Gr %>% select_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% distinct_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% arrange_at(vars(purchase_year, purchase_month)) %>% count_(vars(purchase_year, purchase_month)) %>% ggplot(aes(x = factor(purchase_month), y = n))+\n  geom_point(color = \"darkorchid\", alpha = 0.72, shape = 21, aes(size = n), fill = alpha(\"snow2\", 0.3))+\n  geom_point(color = \"darkorchid\", alpha = 0.81, shape = 21, aes(size = n*0.6), fill = alpha(\"snow2\", 0.3))+\n  geom_segment(aes(x = purchase_month, xend = purchase_month, y = 0, yend = n), alpha = 0.45, linetype = 3, color = \"darkorchid\")+\n  coord_polar(start = 2)+\n  facet_wrap(.~purchase_year)+\n  theme_minimal()+\n  theme(axis.text = element_text(size = 8), panel.grid.major = element_line(), legend.position = \"bottom\")+\n  labs(title = \"New Product categories introduced per month\", x = \"Months\", y = \"Number of Product Categories\")\n\n```\n\n## Sellers' engagement\n\nSellers too maintained the similar trend as that of Customers, and within the time frame of this data, Olist ended up having +3095 registered sellers on it's platform.\n\n```{r, warning=FALSE, message=FALSE, fig.align='center', echo=FALSE}\n\nSeller.Gr <- inner_join(Orders, left_join(Items, Sellers, by = \"seller_id\"), by = \"order_id\")\n\nSeller.Gr %>% select_at(vars(purchase_year, purchase_month, seller_id)) %>% distinct_at(vars(purchase_year, purchase_month, seller_id)) %>% arrange_at(vars(purchase_year, purchase_month)) %>% count_(vars(purchase_year, purchase_month)) %>% ggplot(aes(x = factor(purchase_month), y = n))+\n  geom_point(color = \"red\", alpha = 0.63, shape = 21, aes(size = n), fill = alpha(\"cornsilk\", 0.3))+\n  geom_point(color = \"red\", alpha = 0.81, shape = 21, aes(size = n*0.6), fill = alpha(\"cornsilk\", 0.3))+\n  geom_segment(aes(x = purchase_month, xend = purchase_month, y = 0, yend = n), alpha = 0.45, linetype = 3, color = \"red\")+\n  coord_polar(start = 2)+\n  facet_wrap(.~purchase_year)+\n  theme_minimal()+\n  theme(axis.text = element_text(size = 8), panel.grid.major = element_line(), legend.position = \"bottom\")+\n  labs(title = \"Increase in number of sellers per month\", x = \"Months\", y = \"Number of Sellers\")\n\n```\n\n# FAST MOVING product categories\n\nBuoyancy of Product Categories can be gauged from the fact how frequently a Product Category has been purchased by customers? OR which are the customer driven “FAST MOVING” product categories? This kernel of information may act as one of the parameters which a company (*and in this case Olist*) may probably use for portfolio building. \n\nThis data model has information of 100k orders. Therefore, taking a cue from quartile distribution of data, I have further divided it into 6 sub — sections. This helped me visually determine (*in unscientific form*) which Product Categories were Fast Moving as per each sub — section. \n\n## Purchase made multiple times \n\nLets first start with the case where all Product Categories were purchased multiple times. The graph below shows which categories are high frequency categories.\n\n**Please Note:** It excludes all the categories that were purchased as: one product category per month per year.\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=9, fig.width=7.5}\n\nPdt.Gr %>% group_by_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% filter(!is.na(product_category_name_english))%>% count(product_category_name_english) %>% arrange(desc(n)) %>% filter(!is.na(product_category_name_english) & n >1) %>% ggplot(aes(x = product_category_name_english, y = n))+\n  geom_boxplot(color = \"blueviolet\", alpha = 0.63)+\n  coord_flip()+\n  facet_wrap(.~reorder(purchase_year, desc(purchase_year)), scales = \"free_x\")+\n  theme_minimal()+\n  scale_y_reverse()+\n  theme(axis.text.y = element_text(size = 7.25), panel.grid.major.x = element_line(color = \"white\"), panel.grid.minor.x = element_line(color = \"white\"), panel.grid.major.y =  element_line(color = \"grey95\", linetype = 3))+\n  labs(title = \"Categories purchased at high frequency per year\", x = \"Product Categories\", y = \"Number of times Product Category purchased\")\n\n```\n\n## Six sub - sections {.tabset .tabset-fade .tabset-pills}\n\n### One Order per Product Category\n\nCase where only one order was placed for one product category in a month and in a given year.\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=8, fig.width=8}\n\nPdt.Gr %>% group_by_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% filter(!is.na(product_category_name_english))%>% count(product_category_name_english) %>% arrange(desc(n)) %>% filter(!is.na(product_category_name_english) & n ==1) %>% ggplot(aes(x = product_category_name_english, y = factor(n)))+\n  geom_rug(color = \"white\", alpha = 0.01)+\n  geom_text(aes(label = product_category_name_english), size = 3.25, color = \"firebrick\", vjust = 0)+\n  coord_flip()+\n  facet_wrap(.~purchase_year, scales = \"free\")+\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), panel.background = element_blank(), panel.grid.major.x = element_line(color = \"white\"), panel.grid.major.y = element_line(color = \"white\"), strip.background = element_blank())+\n  labs(title = \"ONE order for one Product Category/Month/Year\",subtitle = \"NO repetition cases\",caption = \"Note: Separate order for another category can be made in same month\", x = \"Product Category purchased\", y = \"... only ONE Order\")\n\n```\n\n### Purchased **\"1 < n < 6\"** times\n\nCase where orders were placed for various product categories and each product category was purchased **more than once but less than six times**. Plus, list below provides some most frequently ordered categories.\n\n- Construction Tools\n- Cine Photo\n- DVDs Blue Ray\n- Fashion Female Clothing\n- Music\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=9, fig.width=8}\n\nPdt.Gr %>% group_by_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% filter(!is.na(product_category_name_english))%>% count(product_category_name_english) %>% arrange(desc(n)) %>% filter(!is.na(product_category_name_english)) %>% filter(n > 1 & n < 6) %>% ggplot(aes(x = purchase_month, y = n))+\n  geom_boxplot(color = \"orangered\", alpha = 0.63)+\n  coord_flip()+\n  facet_wrap(.~factor(product_category_name_english), scales = \"free_x\")+\n  theme_minimal()+\n  theme(axis.text = element_text(size = 5.5), panel.grid.major.x = element_line(color = \"white\"), panel.grid.minor.x = element_line(color = \"white\"), panel.grid.major.y =  element_line(color = \"cornsilk\", linetype = 3))+\n  labs(title = \"Section 02: Categories Purchased '1 < n < 6' times\", x = \"Months: January ... December\", y = \"n = number of times a Product Category was purchased\")\n\n```\n\n### Purchased **\"5 < n < 21\"** times\n\nCase where orders were placed for various product categories and each product category was purchased **more than five but less than twenty one times**. Plus, list below provides some most frequently ordered categories.\n\n- Air Conditioning\n- Construction tools Garden\n- Fixed Telephony\n- Home Appliances 2\n- Market Place\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=9, fig.width=8}\nPdt.Gr %>% group_by_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% filter(!is.na(product_category_name_english))%>% count(product_category_name_english) %>% arrange(desc(n)) %>% filter(!is.na(product_category_name_english)) %>% filter(n > 5 & n < 21) %>% ggplot(aes(x = purchase_month, y = n))+\n  geom_boxplot(color = \"navyblue\", alpha = 0.45)+\n  coord_flip()+\n  facet_wrap(.~factor(product_category_name_english), scales = \"free_x\")+\n  theme_minimal()+\n  theme(axis.text = element_text(size = 5.5), panel.grid.major.x = element_line(color = \"white\"), panel.grid.minor.x = element_line(color = \"white\"), panel.grid.major.y =  element_line(color = \"gray89\", linetype = 3))+\n  labs(title = \"Section 03: Categories Purchased '5 < n < 21' times\", x = \"Months: January ... December\", y = \"n = number of times a Product Category was purchased\")\n\n```\n\n### Purchased **\"20 < n < 93\"** times\n\nCase where orders were placed for various product categories and each product category was purchased **more than twenty but less than ninety three times**. Plus, list below provides some most frequently ordered categories.\n\n- Books general interest\n- Console games\n- Home appliances\n- Luggage accessories\n- Musical instruments\n- Small appliances\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=9, fig.width=8}\n\nPdt.Gr %>% group_by_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% filter(!is.na(product_category_name_english))%>% count(product_category_name_english) %>% arrange(desc(n)) %>% filter(!is.na(product_category_name_english)) %>% filter(n > 20 & n < 93) %>% ggplot(aes(x = purchase_month, y = n))+\n  geom_boxplot(color = \"orangered\", alpha = 0.63)+\n  coord_flip()+\n  facet_wrap(.~factor(product_category_name_english), scales = \"free_x\")+\n  theme_minimal()+\n  theme(axis.text = element_text(size = 5.5), panel.grid.major.x = element_line(color = \"white\"), panel.grid.minor.x = element_line(color = \"white\"), panel.grid.major.y =  element_line(color = \"cornsilk\", linetype = 3))+\n  labs(title = \"Section 04: Categories Purchased '20 < n < 93' times\", x = \"Months: January ... December\", y = \"n = number of times a Product Category was purchased\")\n\n```\n\n### Purchased **\"92 < n < 251\"** times\n\nCase where orders were placed for various product categories and each product category was purchased **more than ninety two but less than two hundred and fifty one times**. Plus, list below provides some most frequently ordered categories.\n\n- Baby\n- Cool stuff\n- Garden tools\n- Perfumery\n- Toys\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=9, fig.width=8}\n\nPdt.Gr %>% group_by_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% filter(!is.na(product_category_name_english))%>% count(product_category_name_english) %>% arrange(desc(n)) %>% filter(!is.na(product_category_name_english)) %>% filter(n > 92 & n < 251) %>% ggplot(aes(x = purchase_month, y = n))+\n  geom_boxplot(color = \"navyblue\", alpha = 0.45)+\n  coord_flip()+\n  facet_wrap(.~factor(product_category_name_english), scales = \"free_x\")+\n  theme_minimal()+\n  theme(axis.text = element_text(size = 5.5), panel.grid.major.x = element_line(color = \"white\"), panel.grid.minor.x = element_line(color = \"white\"), panel.grid.major.y =  element_line(color = \"gray89\", linetype = 3))+\n  labs(title = \"Section 05: Categories Purchased '92 < n < 251' times\", x = \"Months: January ... December\", y = \"n = number of times a Product Category was purchased\")\n\n```\n\n### Purchased **\"250 < n\"** times\n\nCase where orders were placed for various product categories and each product category was purchased **more than two hundred and fifty times**. Plus, list below provides some most frequently ordered categories\n\n- Bed bath table\n- Computer accessories\n- Furniture decor\n- Health beauty\n- Housewares\n- Sports leisure\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=9}\n\nPdt.Gr %>% group_by_at(vars(purchase_year, purchase_month, product_category_name_english)) %>% filter(!is.na(product_category_name_english))%>% count(product_category_name_english) %>% arrange(desc(n)) %>% filter(!is.na(product_category_name_english) & n >250) %>% ggplot(aes(x = purchase_month, y = n))+\n  geom_boxplot(color = \"orangered\", alpha = 0.63)+\n  coord_flip()+\n  facet_wrap(.~factor(product_category_name_english), scales = \"free_x\")+\n  theme_minimal()+\n  theme(axis.text = element_text(size = 8), panel.grid.major.x = element_line(color = \"white\"), panel.grid.minor.x = element_line(color = \"white\"), panel.grid.major.y =  element_line(color = \"cornsilk\", linetype = 3))+\n  labs(title = \"Section 06: Categories Purchased 'n > 250' times\", x = \"Months: January ... December\", y = \"n = number of times a Product Category was purchased\")\n\n```\n\n# Significant features, relations, & equations\n\nk-means clustering has been used to create clusters and to discover significant features. This helped me look into; how those features interacted and what were the relations betweent them? The clusters were created to look into data in tabular form and to discover the polynomial equations.\n\n## k - means Clustering {.tabset .tabset-fade .tabset-pills}\n\nThere is no scientific method used to calcuate number of clusters. I plugged in 6 as number of centers, to keep things even numbered. \nFirst, a big table has been created that contained all relevent features from all data sets (*at least from my analysis point of view*). I did various premutations and combinations to come up with most significant features that may maintain approximately same number of tuples in each cluster. This exercise gave me following features, whose values were first normalised and then they act as back bone of my clusters.\n\n- **Actual Lead Time (days):** Number of days taken to deliver a product to the customer, from the moment an order has been placed in the system.\n- **Order ID:** Identification of order.\n- **Approval time (mins):** Time taken by Olist's system to approve an order after an order has been placed and before it's intimated to supplier/carrier.\n- **Order Item ID:** Number of Items/Order.\n- **Price:** Price/Item, charged from a customer.\n- **Freight Value:** Dellivery Cost/Item, charged from a customer\n- **Product Weight (gms):** Weight of the product in grams\n\n**Please Note:** Price & Freight Value is amount charged per item and is not per order. Plus, an order may have more than one item.\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nTotal.Gr <- inner_join(Seller.Gr, Customers, by =\"customer_id\")\n\nTot.Gr <- na.omit(Total.Gr)\nTot.Gr2 <- Tot.Gr %>% select_at(vars(order_id, Act.Lead.t, Approval.mins, order_item_id, price, freight_value ,product_weight_g))\n\nset.seed(32123)\npreproc <- preProcess(Tot.Gr2[2:7], method = c(\"range\"))\nTot.Grn <- predict(preproc, Tot.Gr2)\n\nTot.Grkm <- kmeans(Tot.Gr2[2:7], centers = 6, iter.max = 1000)\n\nTot.Grkm1 <- subset(Tot.Gr, Tot.Grkm$cluster == 1)\nTot.Grkm2 <- subset(Tot.Gr, Tot.Grkm$cluster == 2)\nTot.Grkm3 <- subset(Tot.Gr, Tot.Grkm$cluster == 3)\nTot.Grkm4 <- subset(Tot.Gr, Tot.Grkm$cluster == 4)\nTot.Grkm5 <- subset(Tot.Gr, Tot.Grkm$cluster == 5)\nTot.Grkm6 <- subset(Tot.Gr, Tot.Grkm$cluster == 6)\n\nTot.Grkm1 <- mutate(Tot.Grkm1, Clust = \"Cluster1\")\nTot.Grkm2 <- mutate(Tot.Grkm2, Clust = \"Cluster2\")\nTot.Grkm3 <- mutate(Tot.Grkm3, Clust = \"Cluster3\")\nTot.Grkm4 <- mutate(Tot.Grkm4, Clust = \"Cluster4\")\nTot.Grkm5 <- mutate(Tot.Grkm5, Clust = \"Cluster5\")\nTot.Grkm6 <- mutate(Tot.Grkm6, Clust = \"Cluster6\")\n\nTot.Gr3 <- union_all(Tot.Grkm1, Tot.Grkm2)\nTot.Gr3 <- union_all(Tot.Gr3, Tot.Grkm3)\nTot.Gr3 <- union_all(Tot.Gr3, Tot.Grkm4)\nTot.Gr3 <- union_all(Tot.Gr3, Tot.Grkm5)\nTot.Gr3 <- union_all(Tot.Gr3, Tot.Grkm6)\n\nw <- Tot.Gr3 %>% filter(order_status == \"delivered\")%>% select_at(vars(Clust, purchase_quart, Act.Lead.t, Approval.mins, order_item_id, price, freight_value ,product_weight_g)) %>% group_by(Clust, purchase_quart) %>% summarise_each(funs(median))\ncolnames(w) <- c(\"Cluster\",\"Quarter\",\"Actual Lead Time (days)\",\"Approval (mins)\",\"Itmes per Order\",\"Price\",\"Freight Value\",\"Weight (gms)\")\n\n```\n\n### Cluster 1\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nw1 <- w %>% filter(Cluster == \"Cluster1\")\nkable(w1, digits = 2, caption = \"Factors for k-means clustering & their values\") %>% kable_styling(c(\"striped\",\"bordered\", \"condensed\"), full_width = F)%>% add_header_above(c(\" \"=2,\"Factor 01\" = 2, \"Factor 02\" = 3, \"Factor 03\" = 1)) %>% group_rows(index = c(\"Year 2016\" = 2, \"Year 2017\" = 4, \"Year 2018\" = 3)) %>% footnote(general = \"   \", alphabet = c(\"Orders delivered\"),number = c(\"Only MEDIANs per quarter per factor are stated\"), alphabet_title = \"Order Status ::\", number_title = \"Values ::\",footnote_as_chunk = T)\n```\n\n### Cluster 2\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nw2 <- w %>% filter(Cluster == \"Cluster2\")\nkable(w2, digits = 2, caption = \"Factors for k-means clustering & their values\") %>% kable_styling(c(\"striped\",\"bordered\", \"condensed\"), full_width = F)%>% add_header_above(c(\" \"=2,\"Factor 01\" = 2, \"Factor 02\" = 3, \"Factor 03\" = 1)) %>% group_rows(index = c(\"Year 2016\" = 1, \"Year 2017\" = 4, \"Year 2018\" = 3)) %>% footnote(general = \"   \", alphabet = c(\"Orders delivered\"),number = c(\"Only MEDIANs per quarter per factor are stated\"), alphabet_title = \"Order Status ::\", number_title = \"Values ::\",footnote_as_chunk = T)\n```\n\n### Cluster 3\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nw3 <- w %>% filter(Cluster == \"Cluster3\")\nkable(w3, digits = 2, caption = \"Factors for k-means clustering & their values\") %>% kable_styling(c(\"striped\",\"bordered\", \"condensed\"), full_width = F)%>% add_header_above(c(\" \"=2,\"Factor 01\" = 2, \"Factor 02\" = 3, \"Factor 03\" = 1)) %>% group_rows(index = c(\"Year 2016\" = 1, \"Year 2017\" = 4, \"Year 2018\" = 3)) %>% footnote(general = \"   \", alphabet = c(\"Orders delivered\"),number = c(\"Only MEDIANs per quarter per factor are stated\"), alphabet_title = \"Order Status ::\", number_title = \"Values ::\",footnote_as_chunk = T)\n```\n\n### Cluster 4\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nw4 <- w %>% filter(Cluster == \"Cluster4\")\nkable(w4, digits = 2, caption = \"Factors for k-means clustering & their values\") %>% kable_styling(c(\"striped\",\"bordered\", \"condensed\"), full_width = F)%>% add_header_above(c(\" \"=2,\"Factor 01\" = 2, \"Factor 02\" = 3, \"Factor 03\" = 1)) %>% group_rows(index = c(\"Year 2016\" = 1, \"Year 2017\" = 4, \"Year 2018\" = 3)) %>% footnote(general = \"   \", alphabet = c(\"Orders delivered\"),number = c(\"Only MEDIANs per quarter per factor are stated\"), alphabet_title = \"Order Status ::\", number_title = \"Values ::\",footnote_as_chunk = T)\n```\n\n### Cluster 5\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nw5 <- w %>% filter(Cluster == \"Cluster5\")\nkable(w5, digits = 2, caption = \"Factors for k-means clustering & their values\") %>% kable_styling(c(\"striped\",\"bordered\", \"condensed\"), full_width = F)%>% add_header_above(c(\" \"=2,\"Factor 01\" = 2, \"Factor 02\" = 3, \"Factor 03\" = 1)) %>% group_rows(index = c(\"Year 2016\" = 1, \"Year 2017\" = 4, \"Year 2018\" = 3)) %>% footnote(general = \"   \", alphabet = c(\"Orders delivered\"),number = c(\"Only MEDIANs per quarter per factor are stated\"), alphabet_title = \"Order Status ::\", number_title = \"Values ::\",footnote_as_chunk = T)\n```\n\n### Cluster 6\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n\nw6 <- w %>% filter(Cluster == \"Cluster6\")\nkable(w6, digits = 2, caption = \"Factors for k-means clustering & their values\") %>% kable_styling(c(\"striped\",\"bordered\", \"condensed\"), full_width = F)%>% add_header_above(c(\" \"=2,\"Factor 01\" = 2, \"Factor 02\" = 3, \"Factor 03\" = 1)) %>% group_rows(index = c(\"Year 2016\" = 1, \"Year 2017\" = 4, \"Year 2018\" = 3)) %>% footnote(general = \"   \", alphabet = c(\"Orders delivered\"),number = c(\"Only MEDIANs per quarter per factor are stated\"), alphabet_title = \"Order Status ::\", number_title = \"Values ::\",footnote_as_chunk = T)\n```\n\n## Interpretability of relation {.tabset .tabset-fade .tabset-pills}\n\nIn this section my attempt is to see the relationship between **Freight Value per Order** a customer pays and the **Number of Items per Order**. Now to interpret this relationship I am be using **Regression equations**, especially the ones that can help in inference and are much more interpretable. Hence, I have chosen **Quasi-Poisson Equations** - as here we are looking at the count data and **Polynomial Equations** - as a generic attempt *(sans due diligence on accuracy or model creation)*. \n\nLet's start with the Graph first: this graph is a “Trade-off between Flexibility and Interpretability”. As my intention is interpretability, so my equations are low on flexibility (*or accuracy*) and relatively high on interpretability - as the status of **Grey POINT** on the graph shows.\n\n*[**Please Note**] I am not showing confidence intervals for model parameters and residual graph to determine if model is a good fit or not.*\n\n```{r, warning=FALSE, message=FALSE, fig.align='center', echo=FALSE}\n\nggplot()+\n  theme_minimal()+\n  theme(axis.text = element_blank())+\n  geom_text(aes(x = 1, y = 6, label = \"High\"), inherit.aes = FALSE)+\n  geom_text(aes(x = 1, y = 1.5, label = \"Low\"), inherit.aes = FALSE)+\n  geom_text(aes(x = 6, y = 1.5, label = \"High\"), inherit.aes = FALSE)+\n  geom_text(aes(x = 0.85, y = 4, label = \"Interpretability ~ less accuracy\", angle = 90), inherit.aes = FALSE)+\n  geom_text(aes(x = 3.75, y = 1.25, label = \"Flexibility ~ more accuracy\"), inherit.aes = FALSE)+\n  geom_text(aes(y = 4.75, x = 2.45, label = \"Regressions: Poisson & Polynomial\"), inherit.aes = FALSE)+\n  geom_text(aes(x = 3.75, y = 4, label = \"In this 'Trade-off' chart my equations stand: here\"), inherit.aes = FALSE)+\n  geom_point(aes(x = 1.85, y = 4.5), size = 4, color = \"grey9\", alpha = 0.81, shape = 21, fill = alpha(\"gray63\", 0.3), inherit.aes = FALSE)+\n  geom_segment(aes(x = 1, xend = 1, y = 2, yend = 5.5), lineend = \"round\", linetype= 2,inherit.aes = FALSE)+\n  geom_segment(aes(x = 1.5, xend = 5.5, y = 1.5, yend = 1.5), lineend = \"round\", linetype= 2,inherit.aes = FALSE)+\n  geom_segment(aes(x = 3.5, xend = 2, y = 4.25, yend = 4.45), lineend = \"round\", linetype= 1, arrow = arrow(length = unit(0.1,\"inches\")),inherit.aes = FALSE)+\n  labs(x = \"\", y = \"\", title = \"Trade-off between Flexibility & Interpretability\", \n       subtitle = \"Derived from: 'An Introduction to Statistical Learning', Chapter 2, Page - 25, Figure 2.7\",\n       caption = \"Authors: Gareth James, Daniela Witten, Trevor Hastie, Robert Tibshirani\")\n```\n\n**Complete Data**\n\nThe $\\frac{\\text{Residual Deviance}}{\\text{Degrees of freedom}} > 1 \\text{ or} \\text{ } \\frac{\\text{Variance}}{\\text{Mean}} \\neq 1$ for `Poisson Regression` is at 7.772, so probably there is overdispersion. We adjust to take into account overdispersion and use `Quasi-Poisson Regression` equation.\n\n`Quasi-Poisson: regression equation`\n\n$$\\text{Freight Value} \\approx 3.037 - 0.0357x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n**Interpretation:** The predictor is significant as p-value $\\approx$ ZERO, the Dispersion parameter for `Quasi-Poisson` family is taken to be at 12.387. The $\\beta = -0.0357$ or $\\beta < 0$ implies with **every unit increase** in items per order the freight **value will decrease** and will be multiplied by -0.0357.\n\nIF we take 8 different parameters to determine the **Freight Value** then using `Quasi-Poisson regression` - following predictors are significant with p-value $\\approx$ ZERO: \n\n- Intercept\n- Number of Items per order\n- Price\n- Estimated lead time\n- Actaul lead time\n- Product's Weight (g)\n- Product's Length (cm)\n- Product's Height (cm)\n- Product's Width (cm) \n\n...and lastly the distance is yet to be taken into account.\n\n*NB: - ~~strikethrough~~ are non-significant parameters. Codes can be had from 'Codes' section.*\n\n```{r, warning=FALSE, message=FALSE}\n##TG3cd1 <- glm(freight_value ~ order_item_id, data = Tot.Gr3, family=\"poisson or quasipoisson\")\n##summary(TG3cd1)\n```\n\n<hr>\n\n`Polynomial: regression equation`\n\n$$\\text{Freight Value} \\approx 19.98 - 152.50x + 44.46x^2 - 79.47x^3 + 77.62x^4 + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n```{r, warning=FALSE, message=FALSE}\n##TG0cd1 <- lm(freight_value ~ poly(order_item_id, 6), data = Tot.Gr3)\n##summary(TG0cd1)\n```\n\n<hr>\n\n### Cluster 1's Equations\n\nThe $\\frac{\\text{Residual Deviance}}{\\text{Degrees of freedom}} > 1 \\text{ or} \\text{ } \\frac{\\text{Variance}}{\\text{Mean}} \\neq 1$ for `Poisson Regression` is at 3.207, so probably there is overdispersion. We adjust to take into account overdispersion and use `Quasi-Poisson Regression` equation.\n\n`Quasi-Poisson: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 1} \\approx 2.830 - 0.037x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n  \n**Interpretation:** The predictor is significant as p-value $\\approx$ ZERO, the Dispersion parameter for `Quasi-Poisson` family is taken to be at 3.984. The $\\beta = -0.037$ or $\\beta < 0$ implies with **every unit increase** in items per order the freight **value will decrease** and will be multiplied by -0.037.\n\nIF we take 8 different parameters to determine the **Freight Value** then using `Quasi-Poisson regression` - following predictors are significant with p-value $\\approx$ ZERO: \n\n- Intercept\n- Number of Items per order\n- Price\n- Estimated lead time\n- Actaul lead time\n- Product's Weight (g)\n- Product's Length (cm)\n- Product's Height (cm)\n- Product's Width (cm) \n\n...and lastly the distance is yet to be taken into account.\n\n*NB: - ~~strikethrough~~ are non-significant parameters. Codes can be had from 'Codes' section.*\n\n```{r, warning=FALSE, message=FALSE}\n##TG31 <- glm(freight_value ~ order_item_id, data = Tot.Grkm1, family=\"poisson or quasipoisson\")\n##summary(TG31)\n```\n\n<hr>\n\n`Polynomial: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 1} \\approx 16.22 - 96.55x - 20.80x^3 + 29.69x^4 - 20.78x^5 + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n##TG1 <- lm(freight_value ~ poly(order_item_id, 6), data = Tot.Grkm1)\n##summary(TG1)\n```\n\n<hr>\n\n### Cluster 2's Equations\n\nThe $\\frac{\\text{Residual Deviance}}{\\text{Degrees of freedom}} > 1 \\text{ or} \\text{ } \\frac{\\text{Variance}}{\\text{Mean}} \\neq 1$ for `Poisson Regression` is at 3.528, so probably there is overdispersion. We adjust to take into account overdispersion and use `Quasi-Poisson Regression` equation.\n\n`Quasi-Poisson: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 2} \\approx 2.867 - 0.018x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n**Interpretation:** The predictor is significant as p-value $\\approx$ ZERO, the Dispersion parameter for `Quasi-Poisson` family is taken to be at 4.204. The $\\beta = -0.018$ or $\\beta < 0$ implies with **every unit increase** in items per order the freight **value will decrease** and will be multiplied by -0.018.\n\nIF we take 8 different parameters to determine the **Freight Value** then using `Quasi-Poisson regression` - following predictors are significant with p-value $\\approx$ ZERO: \n\n- Intercept\n- Number of Items per order\n- Price\n- Estimated lead time\n- Actaul lead time\n- Product's Weight (g)\n- Product's Length (cm)\n- ~~Product's Height (cm)~~\n- ~~Product's Width (cm)~~\n\n...and lastly the distance is yet to be taken into account.\n\n*NB: - ~~strikethrough~~ are non-significant parameters. Codes can be had from 'Codes' section.*\n\n```{r, warning=FALSE, message=FALSE}\n##TG32 <- glm(freight_value ~ order_item_id, data = Tot.Grkm2, family=\"poisson or quasipoisson\")\n##summary(TG32)\n```\n\n<hr>\n\n`Polynomial: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 2} \\approx 17.14 - 34.91x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n##TG2 <- lm(freight_value ~ poly(order_item_id, 6), data = Tot.Grkm2)\n##summary(TG2)\n```\n\n<hr>\n\n### Cluster 3's Equations\n\nThe $\\frac{\\text{Residual Deviance}}{\\text{Degrees of freedom}} > 1 \\text{ or} \\text{ } \\frac{\\text{Variance}}{\\text{Mean}} \\neq 1$ for `Poisson Regression` is at 35.237, so probably there is overdispersion. We adjust to take into account overdispersion and use `Quasi-Poisson Regression` equation.\n\n`Quasi-Poisson: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 3} \\approx 4.525 - 0.032x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n**Interpretation:** The predictor is significant as p-value $\\approx$ ZERO, the Dispersion parameter for `Quasi-Poisson` family is taken to be at 38.974. The $\\beta = -0.032$ or $\\beta < 0$ implies with **every unit increase** in items per order the freight **value will decrease** and will be multiplied by -0.032.\n\nIF we take 8 different parameters to determine the **Freight Value** then using `Quasi-Poisson regression` - following predictors are significant with p-value $\\approx$ ZERO: \n\n- Intercept\n- ~~Number of Items per order~~\n- Price\n- Estimated lead time\n- ~~Actaul lead time~~\n- ~~Product's Weight (g)~~\n- Product's Length (cm)\n- Product's Height (cm)\n- Product's Width (cm) \n\n...and lastly the distance is yet to be taken into account.\n\n*NB: - ~~strikethrough~~ are non-significant parameters. Codes can be had from 'Codes' section.*\n\n```{r, warning=FALSE, message=FALSE}\n##TG33 <- glm(freight_value ~ order_item_id, data = Tot.Grkm3, family=\"poisson or quasipoisson\")\n##summary(TG33)\n```\n\n<hr>\n\n`Polynomial: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 3} \\approx 89.06 + \\epsilon $$\n\n$$ \\epsilon \\Rightarrow \\text{error} $$\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n##TG3 <- lm(freight_value ~ poly(order_item_id, 5), data = Tot.Grkm3)\n##summary(TG3)\n```\n\n<hr>\n\n### Cluster 4's Equations\n\nThe $\\frac{\\text{Residual Deviance}}{\\text{Degrees of freedom}} > 1 \\text{ or} \\text{ } \\frac{\\text{Variance}}{\\text{Mean}} \\neq 1$ for `Poisson Regression` is at 18.649, so probably there is overdispersion. We adjust to take into account overdispersion and use `Quasi-Poisson Regression` equation.\n\n`Quasi-Poisson: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 4} \\approx 3.964 - 0.028x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n**Interpretation:** The predictor is significant as p-value $\\approx$ ZERO, the Dispersion parameter for `Quasi-Poisson` family is taken to be at 23.213. The $\\beta = -0.028$ or $\\beta < 0$ implies with **every unit increase** in items per order the freight **value will decrease** and will be multiplied by -0.028.\n\nIF we take 8 different parameters to determine the **Freight Value** then using `Quasi-Poisson regression` - following predictors are significant with p-value $\\approx$ ZERO: \n\n- Intercept\n- ~~Number of Items per order~~\n- Price\n- Estimated lead time\n- ~~Actaul lead time~~\n- Product's Weight (g)\n- Product's Length (cm)\n- Product's Height (cm)\n- Product's Width (cm) \n\n...and lastly the distance is yet to be taken into account.\n\n*NB: - ~~strikethrough~~ are non-significant parameters. Codes can be had from 'Codes' section.*\n\n```{r, warning=FALSE, message=FALSE}\n##TG34 <- glm(freight_value ~ order_item_id, data = Tot.Grkm4, family=\"poisson or quasipoisson\")\n##summary(TG34)\n```\n\n<hr>\n\n`Polynomial: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 4} \\approx 50.88 + 98.48x^2 - 90.17x^3 + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n##TG4 <- lm(freight_value ~ poly(order_item_id, 6), data = Tot.Grkm4)\n##summary(TG4)\n```\n\n<hr>\n\n### Cluster 5's Equations\n\nThe $\\frac{\\text{Residual Deviance}}{\\text{Degrees of freedom}} > 1 \\text{ or} \\text{ } \\frac{\\text{Variance}}{\\text{Mean}} \\neq 1$ for `Poisson Regression` is at 4.810, so probably there is overdispersion. We adjust to take into account overdispersion and use `Quasi-Poisson Regression` equation.\n\n`Quasi-Poisson: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 5} \\approx 3.169 - 0.068x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n**Interpretation:** The predictor is significant as p-value $\\approx$ ZERO, the Dispersion parameter for `Quasi-Poisson` family is taken to be at 5.761. The $\\beta = -0.068$ or $\\beta < 0$ implies with **every unit increase** in items per order the freight **value will decrease** and will be multiplied by -0.068.\n\nIF we take 8 different parameters to determine the **Freight Value** then using `Quasi-Poisson regression` - following predictors are significant with p-value $\\approx$ ZERO: \n\n- Intercept\n- Number of Items per order\n- Price\n- Estimated lead time\n- Actaul lead time\n- Product's Weight (g)\n- Product's Length (cm)\n- Product's Height (cm)\n- Product's Width (cm) \n\n...and lastly the distance is yet to be taken into account.\n\n*NB: - ~~strikethrough~~ are non-significant parameters. Codes can be had from 'Codes' section.*\n\n```{r, warning=FALSE, message=FALSE}\n##TG35 <- glm(freight_value ~ order_item_id, data = Tot.Grkm5, family=\"poisson or quasipoisson\")\n##summary(TG35)\n```\n\n<hr>\n\n`Polynomial: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 5} \\approx 22.00 - 95.53x + 27.75x^2 + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n##TG5 <- lm(freight_value ~ poly(order_item_id, 6), data = Tot.Grkm5)\n##summary(TG5)\n```\n\n<hr>\n\n### Cluster 6's Equations\n\nThe $\\frac{\\text{Residual Deviance}}{\\text{Degrees of freedom}} > 1 \\text{ or} \\text{ } \\frac{\\text{Variance}}{\\text{Mean}} \\neq 1$ for `Poisson Regression` is at 9.993, so probably there is overdispersion. We adjust to take into account overdispersion and use `Quasi-Poisson Regression` equation.\n\n`Quasi-Poisson: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 6} \\approx 3.461 - 0.012x + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n**Interpretation:** The predictor is significant as p-value $\\approx$ ZERO, the Dispersion parameter for `Quasi-Poisson` family is taken to be at 12.102. The $\\beta = -0.012$ or $\\beta < 0$ implies with **every unit increase** in items per order the freight **value will decrease** and will be multiplied by -0.012.\n\nIF we take 8 different parameters to determine the **Freight Value** then using `Quasi-Poisson regression` - following predictors are significant with p-value $\\approx$ ZERO: \n\n- Intercept\n- ~~Number of Items per order~~\n- Price\n- Estimated lead time\n- Actaul lead time\n- Product's Weight (g)\n- Product's Length (cm)\n- Product's Height (cm)\n- Product's Width (cm) \n\n...and lastly the distance is yet to be taken into account.\n\n*NB: - ~~strikethrough~~ are non-significant parameters. Codes can be had from 'Codes' section.*\n\n```{r, warning=FALSE, message=FALSE}\n##TG36 <- glm(freight_value ~ order_item_id, data = Tot.Grkm6, family=\"poisson or quasipoisson\")\n##summary(TG36)\n```\n\n<hr>\n\n`Polynomial: regression equation`\n\n$$\\text{Freight Value}_\\text{ Cluster 6} \\approx 31.41 + 49.12x^2 + \\epsilon $$\n\n$$ x \\Rightarrow \\text{Number of Items per Order}, \\text{ } \\epsilon \\Rightarrow \\text{error}$$\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n##TG6 <- lm(freight_value ~ poly(order_item_id, 6), data = Tot.Grkm6)\n##summary(TG6)\n```\n<hr>\n\n## Sellers vs Customers spread across states\n\nThe graph below shows how the density of customers and sellers are spread across various states of Brazil. It is a stagnant presentation of graph \"Customers.Sellers.States.gif\", that is pasted below along with it's code.\n\n```{r, warning=FALSE, message=FALSE, fig.align='center', echo=FALSE, fig.height=8.25}\nCS.states <- inner_join(left_join(Customers,select(Orders, order_id, customer_id, order_status, Est.Lead.t, Act.Lead.t, Approval.mins, Appr.to.Car, Car.to.Cus), by = \"customer_id\"),left_join(Items, Sellers, by = \"seller_id\"), by = \"order_id\")\n\nCS.states <- mutate(CS.states, cs.ss= if_else(customer_zip_code_prefix == seller_zip_code_prefix,1,0))\n\nCSS.D <- CS.states %>% filter(order_status == \"delivered\")%>% ggplot(aes(y = customer_state, x = seller_state))+\n  geom_jitter(fill = alpha(\"blue\", 0.001), color = \"white\", alpha = 0.36, size = 2.1, shape = 21)+\n  coord_polar(start = 0)+\n  theme_minimal()+\n  theme(axis.text.y = element_text(size = 5), axis.text.x = element_text(size = 7.5), axis.title = element_text(size = 9))+\n  labs(x = \"Seller's State\", y = \"Customer's State\", subtitle = \"Group: Delivered orders\")\n\nCSS.S <- CS.states %>% filter(order_status == \"shipped\")%>% ggplot(aes(y = customer_state, x = seller_state))+\n  geom_jitter(fill = alpha(\"red\", 0.001), color = \"white\", alpha = 0.36, size = 2.1, shape = 21)+\n  coord_polar(start = 0)+\n  theme_minimal()+\n  theme(axis.text.y = element_text(size = 5), axis.text.x = element_text(size = 7.5), axis.title = element_text(size = 9))+\n  labs(x = \"Seller's State\", y = \"Customer's State\", subtitle = \"Group: Shipped orders\")\n\nCSS.P <- CS.states %>% filter(order_status == \"processing\")%>% ggplot(aes(y = customer_state, x = seller_state))+\n  geom_jitter(fill = alpha(\"olivedrab\", 0.001), color = \"white\", alpha = 0.36, size = 2.1, shape = 21)+\n  coord_polar(start = 0)+\n  theme_minimal()+\n  theme(axis.text.y = element_text(size = 5), axis.text.x = element_text(size = 7.5), axis.title = element_text(size = 9))+\n  labs(x = \"Seller's State\", y = \"Customer's State\", subtitle = \"Group: Orders in Processing\")\n\nCSS.I <- CS.states %>% filter(order_status == \"invoiced\")%>% ggplot(aes(y = customer_state, x = seller_state))+\n  geom_jitter(fill = alpha(\"blueviolet\", 0.001), color = \"white\", alpha = 0.36, size = 2.1, shape = 21)+\n  coord_polar(start = 0)+\n  theme_minimal()+\n  theme(axis.text.y = element_text(size = 5), axis.text.x = element_text(size = 7.5), axis.title = element_text(size = 9))+\n  labs(x = \"Seller's State\", y = \"Customer's State\", subtitle = \"Group: Invoiced orders\")\n\ngrid.arrange(CSS.D, CSS.P, CSS.S, CSS.I, ncol = 2)\n\n```\n\n## Customer Order Cycle impression\n\nGraph is the first pictorial insight into: how Customer Order Cycle (*the time to deliver goods*) has changed as Olist started growing. This graph is the stagnant presentation of the graph \"Lead.Times.gif\", which has been pasted below along with it's code.\n\n```{r, warning=FALSE, fig.align='center', message=FALSE, echo=FALSE}\nLead.Time <- Orders %>% group_by_at(vars(purchase_quart, order_status)) %>% summarise_at(c(\"Est.Lead.t\",\"Act.Lead.t\",\"Approval.mins\", \"Appr.to.Car\", \"Car.to.Cus\"), mean, na.rm = TRUE) %>% arrange_at(vars(purchase_quart, order_status))\nLead.Time <- mutate(Lead.Time, Quart.Y = paste0(purchase_quart, sep =\"Q\"))\nLead.Time$Quart.Y <- as.factor(Lead.Time$Quart.Y)\n\nLT.D <- Lead.Time %>% filter(order_status ==\"delivered\")%>% ggplot(aes(x = purchase_quart, y =Est.Lead.t))+\n  geom_point(size=4, color=\"red\", fill=alpha(\"orange\", 0.45), alpha=0.63, shape=21, stroke=1)+\n  facet_wrap(~Quart.Y, strip.position = \"bottom\")+\n  coord_polar(start = 0)+\n  theme(axis.text.x = element_blank(), axis.ticks = element_blank(), panel.background = element_blank(), panel.grid.major.x = element_line(color = \"red\", linetype = 4), panel.grid.major.y = element_line(color = \"red\", linetype = 3), strip.background = element_blank())+\n  labs(subtitle = \"Order Status: Delivered\", x = \"\", y = \"\")\n\nLT.S <- Lead.Time %>% filter(order_status ==\"shipped\")%>% ggplot(aes(x = purchase_quart, y =Est.Lead.t))+\n  geom_point(size=4, color=\"navyblue\", fill=alpha(\"blue\", 0.45), alpha=0.63, shape=21, stroke=1)+\n  facet_wrap(~Quart.Y, strip.position = \"bottom\")+\n  coord_polar(start = 0)+\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), panel.background = element_blank(), panel.grid.major.x = element_line(color = \"royalblue\", linetype = 4), panel.grid.major.y = element_line(color = \"royalblue\", linetype = 3), strip.background = element_blank())+\n  labs(subtitle = \"Order Status: Shipped\", x = \"\", y = \"\")\n\ngrid.arrange(LT.D, LT.S, ncol = 2, top = \"Change in average lead times per Quarter\", left=\"Estimated average lead time [..in Days]\", bottom = \"Purchasing Quarter\")\n\n```\n\n\n# Conclusion\n\nThanks for giving your time to this long notebook. Should you like it, please do upvote.\n\n\n# Appendix\n\n<he>\n\n**Appendix 01**\n\nThe code of \"Customers.Sellers.States.gif\" graph has been provided below. The animated graph had been created with **gganimate package** but due to API version incompatibility the actual code has been provided below for reference.\n\n![Olist's Customers - Sellers States' density](https://amoudgil.files.wordpress.com/2019/04/cs.gif?w=529)\n\nCS.states %>% \nggplot(aes(y = customer_state, x = seller_state))+\n  geom_jitter(fill = alpha(\"blue\", 0.001), color = \"white\", alpha = 0.36, size = 2.1, shape = 21)+\n  coord_polar(start = 0)+\n  theme_minimal()+\n  labs(title =\"Order Status' Density :: ...{closest_state}...\", \n  x = \"Seller's State\", y = \"Customer's State\", \n  subtitle = \"States :: Sellers vs. Customers\")+\ntransition_states(order_status, transition_length = 5, state_length = 5)\n\n<hr>\n\n**Appendix 02**\n\nThe actual graph had been created with **gganimate package** but due to API version incompatibility the code of \"Lead.Times.gif\" graph has been provided below for reference.\n\n![Average Lead Times per Quarter per Year](https://amoudgil.files.wordpress.com/2019/04/lt.gif?w=529)\n\nLead.Time %>% ggplot(aes(x = purchase_quart, y =Est.Lead.t))+\n  geom_line(color = \"red\", alpha = 0.81, linetype = \"longdash\")+\n  geom_segment(aes(xend = 2018.4, yend = Est.Lead.t), linetype = 2, colour = 'grey51')+\n  geom_text(aes(x = 2018.3, label = Quart.Y, hjust = 1))+\n  geom_point(size=3, color=\"red\", fill=alpha(\"orange\", 0.63), alpha=0.54, shape=21, stroke=1)+\n  facet_wrap(~order_status)+\n  coord_polar(start = 0)+\n  transition_reveal(purchase_quart)+\n  theme(axis.text.x = element_blank(),\n        axis.ticks = element_blank(),\n        panel.background = element_blank(),\n        panel.grid.major.x = element_line(color = \"coral\", linetype = 3),\n        panel.grid.major.y = element_line(color = \"coral\", linetype = 3),\n        strip.background = element_blank())+\n  labs(title = \"Change in proposed average lead times per Quarter/Year\", \n  subtitle = \"Proposed average number of days to delivery\", \n  x = \"Purchasing Quarter/Year\", \n  y= \" Estimated average lead time [... in Days]\", \n  caption = \"derived from Thomas Lin Pedersen's Dec 2018 graph: ~github.com/thomasp85\")\n\n<hr>\n\n**Disclaimer:** The written article and the analysis was done in my individual capacity. The views and opinions expressed here are my own and they do not necessarily represent the views or opinions of any of the companies I worked (or working) for. Besides, I never worked for Olist either paid or otherwise.\n\n**Hashtags:** #ecommerce #SaaS #analytics #data #Brazil #supplychain #business  #marketplaces","metadata":{"_uuid":"218dc481-1376-4b66-881a-66c7d4f0d33c","_cell_guid":"1e4aa9f2-f89e-4ccb-8505-eeba17b34285","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}